/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default steadyState;
}

gradSchemes
{
//    default       cellLimited Gauss linear 0;
      default       Gauss linear;
//    grad(p)       cellLimited Gauss linear 1; //faceLimited Gauss linear 1.0; // Gauss linear;
//    grad(U)       cellLimited Gauss linear 1;   // Gauss linear;
//    grad(U)       faceLimited Gauss linear 1.0;
//    grad(k)       faceLimited Gauss linear 1.0; // cellLimited Gauss linear 1;
//    grad(omega)   faceLimited Gauss linear 1.0; // cellLimited Gauss linear 1;
}

divSchemes
{
    default                       none;
    div(phi,U)                    bounded Gauss linearUpwindV grad(U);
//  div(phi,U)	                  bounded Gauss upwind; // bounded Gauss linearUpwind grad(U); 
    div(phi,k)                    bounded Gauss limitedLinear 1;      // bounded Gauss linearUpwind grad(k);     // bounded Gauss upwind; 
    div(phi,omega)                bounded Gauss limitedLinear 1;      // bounded Gauss linearUpwind grad(omega); // bounded Gauss upwind; 
    div((nuEff*dev(T(grad(U)))))  Gauss linear;
    div((nuEff*dev2(T(grad(U))))) Gauss linear;
    div(nonlinearStress)          Gauss linear;
}

laplacianSchemes
{
    default      	Gauss linear corrected;
//  default      	Gauss linear limited 0.33;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
//  default         limited corrected 0.33;
}

fluxRequired
{
    default         no;
    p;
}

wallDist
{
    method meshWave;
}

// ************************************************************************* //
